{"meta":{"title":"枫叶潇潇","subtitle":"欢迎来到我的博客","description":"","author":"fangjinlong","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"正则表达式","slug":"正则表达式","date":"2022-10-19T10:14:16.917Z","updated":"2022-10-20T12:02:17.780Z","comments":true,"path":"2022/10/19/正则表达式/","link":"","permalink":"http://example.com/2022/10/19/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","excerpt":"","text":"正则表达式1.限定符？：0次或1次 *：0个或多次 +：一次以上 {int, int }:限定次数 2.或运算符例：a (bc|cd) 可以匹配：a bc或 a cd 3.字符类例：[a-zA-Z0-9]+ ：所有字符出现1次以上 [^0-9]+ : 所有非数字字符出现一次以上 4.元字符4.1 \\d:数字字符 ​ \\D:非数字字符 4.2 \\w：单词字符 ​ \\W：非单词字符 4.3 \\s:空白符（包含Tab和换行符） ​ \\S:非空白符 4.4 .（点号）:任意字符（不包含换行符） 4.5 ^:匹配行首： ^a ​ $:匹配行尾: a$ 4.6 贪婪匹配-&gt;懒惰匹配:&lt;.+&gt;变成&lt;.+?&gt; 5.RGB颜色值匹配例:#ffffff 可以用正则表达式：#[a-fA-F0-9]{6}\\b 注意：\\b代表单词字符边界 6.IPv4地址匹配例：192.168.0.1 正则表达式：\\d+.\\d+.\\d+.\\d+ -&gt;有缺陷:可能匹配到266.266.266.266 改良: \\b((25[0-5]|2[0-4]\\d|[01]?\\d\\d?).){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\b","categories":[],"tags":[]},{"title":"Mysql","slug":"网络爬虫","date":"2022-10-18T10:52:38.083Z","updated":"2022-10-20T12:01:51.461Z","comments":true,"path":"2022/10/18/网络爬虫/","link":"","permalink":"http://example.com/2022/10/18/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/","excerpt":"","text":"### 爬虫 2022&#x2F;10&#x2F;18 1.爬虫代码(有感)123456789101.#库from urls.request import urlopenfrom urls.error import httperro,urlerrorfrom bs4 import BeautifulSoup(大小写不能错)2.#拿到页面html=urlopen(&quot;网址&quot;)3.#放到美味的汤里(将拿到的html源码变得有序)bsobj=BeautifulSoup(html.read())4.#拿到想要的部分print(bsobj.title)//也可以是bsobj.h1 2.抓取网页内容1234561.#抓取上文bsobj内的东西namelist=bsobj.findall(&quot;span&quot;,&#123;&quot;class&quot;:&quot;green&quot;&#125;)2,#将抓取到的一次输出打印for name in namelist: print(name.get_text())//只输出标签内的内容 #print(name)//连带标签一起输出 3.抓取表格数据1234567891011121.抓取表格后代数据（父与子）:children(),descendants()#拿到bsobj对象后的操作for child in bsobj.find(&quot;table&quot;,&#123;&quot;id&quot;:&quot;giftList&quot;&#125;).children:print(child)#注意打印子标签是children函数，如果想打印后代标签就要用descendants函数2.抓取表格数据（兄弟）:next_siblings()for sibing in bsobj.find(&quot;table&quot;,&#123;&quot;id&quot;:&quot;giftList&quot;&#125;).tr.next_siblings:print(sibling)#注意这是打印了表格所有行数据（表格标题除外—） 10&#x2F;19 今天遇到了一个问题： 1234567891011####代码如下：html=urlopen(&quot;https://www.pythonscraping.com/pages/page3.html&quot;)bsobj=BeautifulSoup(html.read())####报错：GuessedAtParserWarning: No parser was explicitly specified, so I&#x27;m using the best available HTML parser for this system (&quot;html.parser&quot;). This usually isn&#x27;t a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.####中文翻译是：GuessedAtParserWarning：没有显式指定解析器，所以我使用了这个系统可用的最佳HTML解析器（“HTML.parser”）。这通常不是问题，但如果您在另一个系统上或在不同的虚拟环境中运行此代码，它可能会使用不同的解析器，并且表现不同。###解决方法：1.按照它说的，添加一个参数：bsobj=BeautifulSoup(html.read(),&quot;html.parser&quot;)//添加一个解析器参数，但并没有真正解决问题，事实上，它仅仅是没报错而已，但却没有相应的输出。2.事实上是网址错了，改为：html=urlopen(&quot;http://www.pythonscraping.com/pages/page3.html&quot;)//减少一个s就能正常解析url了 1.怎么拿到一个标签的所有属性如一个a标签： 如果想拿到href，alt，title属性,可以：a.attrs 想拿到href，alt，title属性中的一个，可以：a.attrs[“alt”] 2.小知识（Lambda表达式）实例： 1234567#正常函数def add(x,y): return x+yprint(add(2,4))改写成lambda表达式:f=lambda x,y:x+yprint(f(2,4))","categories":[],"tags":[]},{"title":"django","slug":"django","date":"2022-10-17T23:33:53.607Z","updated":"2022-10-20T11:59:50.495Z","comments":true,"path":"2022/10/18/django/","link":"","permalink":"http://example.com/2022/10/18/django/","excerpt":"","text":"django网页开发的具体步骤123456789101112131415161.生成项目文件夹django-admin startproject 工程名2.添加应用python manage.py startapp 应用名3.在工程同名的子文件夹下的setting.py文件中修改一些设置如在INSTALLED_APPS中添加应用名4.在工程的同名文件夹的urls.py文件中配置一级路由导入from django.urls import pathpath=[ &quot;路由&quot;,视图文件名，name=&quot;路由别名（实现url逆向解析）&quot;， ]5.配置相应的views.py6.在网站首页app中templates文件夹中添加html文件，然后在该文件中通过静态文件的方法将其他应用链接起来，列可添加这样的a标签&lt;a href=&quot;&#123;% url &#x27;应用名:路由别名&#x27; %&#125;&quot;","categories":[],"tags":[]},{"title":"git","slug":"git","date":"2022-10-16T13:07:27.673Z","updated":"2022-10-20T11:58:17.104Z","comments":true,"path":"2022/10/16/git/","link":"","permalink":"http://example.com/2022/10/16/git/","excerpt":"","text":"如何用git将文件夹提交到gitee的指定分支，如（master） 例子：如现在想将桌面名为test的文件夹上传到gitee的master分支上，步骤为？123456789101112#先将test的上一级目录格式化为git本地仓库git init#添加远程仓库地址git remote add origin http://xxxx.git#远程仓库与本地仓库同步git pull origin gitee的分支名 -allow-unrelated-histories#把拉取到的文件添加暂存区git add .#添加到本地仓库git commit -m &#x27;备注&#x27;#最后一步上传到远程仓库（gitee)git push origin 分支名 注意：要上传的本地分支名要和远程的分支名相同，不同的话在本地创建一个分支git branch 分支名，在切换分支git checkout 分支名 将自己的gitee远程仓库上传到别人的gitee上怎么弄？ 主要步骤如下: 12345678910第一步:先克隆自己的远程仓库到本地git clone 自己的gitee地址 文件夹名第二步:修改当前主机windows凭证里Internet地址或网络地址为git:https://gitee.com的选项，将用户名和密码，修改成他人的第三步:登录他人的gitee账号并上传git remote add origin 他人的仓库注意这一步要先抓取在上传git pull origin master --allow-unrelated-historiesgit push origin master(这一步报错就要先用add和commit命令先添加到本地仓库)completely!!!!!!!","categories":[],"tags":[]},{"title":"Mysql","slug":"Mysql","date":"2022-10-15T11:32:10.350Z","updated":"2022-10-16T14:41:44.747Z","comments":true,"path":"2022/10/15/Mysql/","link":"","permalink":"http://example.com/2022/10/15/Mysql/","excerpt":"","text":"Mysql 2022&#x2F;10&#x2F;15 1.Mysql的基本命令 1234567891011121314151617181920- #开启Mysql net start mysql- #关闭 net stop mysql- #退出 quit- #登录 mysql -u root -p- #查看用户账号 select *from mysql. user；（记得加分号）- #修改密码alter user’root’@‘localhost’ identified with mysql_native_password by ‘新密码’;- #显示表：show tables;- #使用数据库 use 数据库名- #创建数据 create database 数据库名 default charset utf8;- #具体查看表 desc 表名","categories":[],"tags":[]},{"title":"数据恢复","slug":"数据恢复","date":"2022-10-15T02:21:18.782Z","updated":"2022-10-15T02:22:16.930Z","comments":true,"path":"2022/10/15/数据恢复/","link":"","permalink":"http://example.com/2022/10/15/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/","excerpt":"","text":"##数据恢复 2022&#x2F;10&#x2F;15","categories":[],"tags":[]},{"title":"first blog","slug":"firstblog","date":"2022-10-15T01:03:22.425Z","updated":"2022-10-15T01:11:14.240Z","comments":true,"path":"2022/10/15/firstblog/","link":"","permalink":"http://example.com/2022/10/15/firstblog/","excerpt":"","text":"#我的第一篇博客 2022&#x2F;10&#x2F;15百度","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-10-14T13:18:12.595Z","updated":"2022-10-14T13:18:12.595Z","comments":true,"path":"2022/10/14/hello-world/","link":"","permalink":"http://example.com/2022/10/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}